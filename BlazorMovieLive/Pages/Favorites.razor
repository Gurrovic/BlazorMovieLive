@page "/favorites"
@inject TMDBCLient TMDB
@inject NavigationManager Nav
@inject IAuthService AuthService

<PageTitle>Blazor Movie: Favorite Movies</PageTitle>

<div class="container-xxl py-3">
    <div>
        <h1 class="display-6">
            <span class="text-danger">
                <i class="bi bi-fire"></i>
            </span>
            Favorite Movies
        </h1>
    </div>


    @if (favoriteMovies != null && favoriteMovies.Results != null && favoriteMovies.Results.Any())
    {
        <MovieListComponent Movies="favoriteMovies.Results"
                            CurrentPage="favoriteMovies.Page != null ? favoriteMovies.Page : 1"
                            TotalPages="favoriteMovies.TotalPages != null ? favoriteMovies.TotalPages : 1"
                            OnPageChanged="GetPage" />
    }
    else
    {
        <p>No favorite movies found. You should start adding movies so you remember your favorite ones!</p>
    }
</div>


@code {
    private PopularMoviePagedResponse? favoriteMovies;    

    protected override async Task OnInitializedAsync()
    {
        await FetchFavoriteMovies();
    }

    private async Task FetchFavoriteMovies()
    {
        // Step 1: Fetch favorite movie IDs using AuthService
        var favoriteMovieIds = await AuthService.GetFavoriteMovieIdsAsync();
        if (favoriteMovieIds == null || !favoriteMovieIds.Any())
        {
            // Handle the case where there are no favorite movies
            var favoriteMovies = new List<PopularMoviePagedResponse>();
            return;
        }        

        favoriteMovies = await TMDB.GetMoviesByIdsAsync(favoriteMovieIds);
    }

    private void GetPage(int pageNum)
    {
        string url = Nav.GetUriWithQueryParameter("page", pageNum);
        Nav.NavigateTo(url);
    }
}
