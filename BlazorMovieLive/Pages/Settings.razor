@page "/settings"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<PageTitle>Blazor Movie: Account Settings</PageTitle>

@if (!string.IsNullOrEmpty(updateMessage))
{
    <div class="alert alert-success">
        @updateMessage
    </div>
}

@if (userSettings != null)
{
    <div class="container" style="margin-top: 200px;">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <h3 class="card-title">User Settings</h3>
                    </div>
                    <div class="card-body">
                        <EditForm Model="@userSettings" OnValidSubmit="UpdateUserSettings">
                            <DataAnnotationsValidator />
                            <ValidationSummary />

                            <div class="mb-3">
                                <label for="firstName" class="form-label">First Name</label>
                                <InputText Id="firstName" class="form-control" @bind-Value="@userSettings.FirstName" />
                            </div>
                            <div class="mb-3">
                                <label for="lastName" class="form-label">Last Name</label>
                                <InputText Id="lastName" class="form-control" @bind-Value="@userSettings.LastName" />
                            </div>

                            <div class="text-center">
                                <button type="submit" class="btn btn-success">Save Changes</button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


else
{
    <p>Loading...</p>
}


@code {
    private UserSettingsModel? userSettings;
    private string updateMessage = "";

    protected override async Task OnInitializedAsync()
    {        
        userSettings = await AuthService.GetUserSettings();
    }

    private async Task UpdateUserSettings()
    {
        bool updateSuccessful = await AuthService.UpdateUserSettings(userSettings);

        if (updateSuccessful)
        {
            updateMessage = "Changes have been implemented";
            StateHasChanged();
            await Task.Delay(3000);
            updateMessage = "";
            StateHasChanged();           
        }
        else
        {
            updateMessage = "Failed to update settings";
            StateHasChanged();
        }
    }

}
